# Generated by Django 5.1.2 on 2024-10-25 13:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('user_name', models.CharField(max_length=100)),
                ('school', models.CharField(max_length=100)),
                ('current_academic_degree', models.CharField(max_length=10)),
                ('year', models.IntegerField()),
                ('major1', models.CharField(choices=[('물리학과', '물리학과'), ('수리과학과', '수리과학과'), ('화학과', '화학과'), ('나노과학기술대학원', '나노과학기술대학원'), ('양자대학원', '양자대학원'), ('생명과학과', '생명과학과'), ('뇌인지과학과', '뇌인지과학과'), ('의과학대학원', '의과학대학원'), ('공학생물학대학원', '공학생물학대학원'), ('줄기세포및재생생물학대학원', '줄기세포및재생생물학대학원'), ('기계공학과', '기계공학과'), ('항공우주공학과', '항공우주공학과'), ('전기및전자공학부', '전기및전자공학부'), ('전산학부', '전산학부'), ('건설및환경공학과', '건설및환경공학과'), ('바이오및뇌공학과', '바이오및뇌공학과'), ('산업디자인학과', '산업디자인학과'), ('산업시스템공학과', '산업시스템공학과'), ('생명화학공학과', '생명화학공학과'), ('신소재공학과', '신소재공학과'), ('원자력및양자공학과', '원자력및양자공학과'), ('반도체시스템공학과', '반도체시스템공학과'), ('조천식모빌리티대학원', '조천식모빌리티대학원'), ('김재철AI대학원', '김재철AI대학원'), ('녹색성장지속가능대학원', '녹색성장지속가능대학원'), ('반도체공학대학원', '반도체공학대학원'), ('인공지능반도체대학원', '인공지능반도체대학원'), ('메타버스대학원', '메타버스대학원'), ('시스템아키텍트대학원', '시스템아키텍트대학원'), ('디지털인문사회과학부', '디지털인문사회과학부'), ('문화기술대학원', '문화기술대학원'), ('문술미래전략대학원', '문술미래전략대학원'), ('과학기술정책대학원', '과학기술정책대학원'), ('경영공학부', '경영공학부'), ('기술경영학부', '기술경영학부'), ('KAIST경영전문대학원', 'KAIST경영전문대학원'), ('금융전문대학원', '금융전문대학원'), ('경영자과정', '경영자과정'), ('기술경영전문대학원', '기술경영전문대학원'), ('글로벌디지털혁신대학원', '글로벌디지털혁신대학원'), ('바이오혁신경영전문대학원', '바이오혁신경영전문대학원'), ('융합인재학부', '융합인재학부'), ('안보과학기술대학원', '안보과학기술대학원'), ('사이버안보기술대학원', '사이버안보기술대학원'), ('새내기과정학부', '새내기과정학부')], default='pending', max_length=100)),
                ('major2', models.CharField(blank=True, choices=[('물리학과', '물리학과'), ('수리과학과', '수리과학과'), ('화학과', '화학과'), ('나노과학기술대학원', '나노과학기술대학원'), ('양자대학원', '양자대학원'), ('생명과학과', '생명과학과'), ('뇌인지과학과', '뇌인지과학과'), ('의과학대학원', '의과학대학원'), ('공학생물학대학원', '공학생물학대학원'), ('줄기세포및재생생물학대학원', '줄기세포및재생생물학대학원'), ('기계공학과', '기계공학과'), ('항공우주공학과', '항공우주공학과'), ('전기및전자공학부', '전기및전자공학부'), ('전산학부', '전산학부'), ('건설및환경공학과', '건설및환경공학과'), ('바이오및뇌공학과', '바이오및뇌공학과'), ('산업디자인학과', '산업디자인학과'), ('산업시스템공학과', '산업시스템공학과'), ('생명화학공학과', '생명화학공학과'), ('신소재공학과', '신소재공학과'), ('원자력및양자공학과', '원자력및양자공학과'), ('반도체시스템공학과', '반도체시스템공학과'), ('조천식모빌리티대학원', '조천식모빌리티대학원'), ('김재철AI대학원', '김재철AI대학원'), ('녹색성장지속가능대학원', '녹색성장지속가능대학원'), ('반도체공학대학원', '반도체공학대학원'), ('인공지능반도체대학원', '인공지능반도체대학원'), ('메타버스대학원', '메타버스대학원'), ('시스템아키텍트대학원', '시스템아키텍트대학원'), ('디지털인문사회과학부', '디지털인문사회과학부'), ('문화기술대학원', '문화기술대학원'), ('문술미래전략대학원', '문술미래전략대학원'), ('과학기술정책대학원', '과학기술정책대학원'), ('경영공학부', '경영공학부'), ('기술경영학부', '기술경영학부'), ('KAIST경영전문대학원', 'KAIST경영전문대학원'), ('금융전문대학원', '금융전문대학원'), ('경영자과정', '경영자과정'), ('기술경영전문대학원', '기술경영전문대학원'), ('글로벌디지털혁신대학원', '글로벌디지털혁신대학원'), ('바이오혁신경영전문대학원', '바이오혁신경영전문대학원'), ('융합인재학부', '융합인재학부'), ('안보과학기술대학원', '안보과학기술대학원'), ('사이버안보기술대학원', '사이버안보기술대학원'), ('새내기과정학부', '새내기과정학부')], default='pending', max_length=100, null=True)),
                ('one_degree_count', models.IntegerField(default=0)),
                ('introduction', models.TextField(blank=True, default='', max_length=1000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('keywords', models.ManyToManyField(blank=True, to='api.keyword')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('collaborators', models.ManyToManyField(blank=True, related_name='collaborations', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, related_name='experiences', to='api.keyword')),
                ('profiles', models.ManyToManyField(blank=True, related_name='experiences', to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Inquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiries', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('notification_type', models.CharField(choices=[('invitation_register', 'Invitation Register'), ('invitation_expired', 'Invitation Expired'), ('friend_accept', 'Friend Accept'), ('friend_reject', 'Friend Reject'), ('friend_request', 'Friend Request'), ('project_tag', 'Project Tag'), ('new_comment', 'New Comment'), ('reply_comment', 'Reply Comment')], max_length=30)),
                ('related_user_id', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('like_count', models.IntegerField(default=0)),
                ('contact', models.TextField(blank=True, null=True)),
                ('keywords', models.ManyToManyField(blank=True, to='api.keyword')),
                ('tagged_users', models.ManyToManyField(blank=True, related_name='participating_projects', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_info', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('likes', models.IntegerField(default=0)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='api.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='project_images/')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.project')),
            ],
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_histories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExperienceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='api.experience')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experience_details', to=settings.AUTH_USER_MODEL)),
                ('skills_used', models.ManyToManyField(blank=True, related_name='experience_details', to='api.skill')),
            ],
        ),
        migrations.AddField(
            model_name='skill',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='api.profile'),
        ),
        migrations.CreateModel(
            name='PortfolioLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portfolioLink', models.URLField()),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_links', to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends_from', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends_to', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('to_user', 'from_user', 'status')},
            },
        ),
        migrations.CreateModel(
            name='InvitationLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invitee_name', models.CharField(max_length=255)),
                ('invitee_id', models.IntegerField(blank=True, null=True)),
                ('link', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('expired', 'Expired')], default='pending', max_length=10)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitation_links', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('inviter', 'link')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='api.project')),
            ],
            options={
                'unique_together': {('user', 'project')},
            },
        ),
        migrations.CreateModel(
            name='Endorsement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endorsed_at', models.DateTimeField(auto_now_add=True)),
                ('endorsed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endorsements', to='api.skill')),
            ],
            options={
                'unique_together': {('skill', 'endorsed_by')},
            },
        ),
    ]
